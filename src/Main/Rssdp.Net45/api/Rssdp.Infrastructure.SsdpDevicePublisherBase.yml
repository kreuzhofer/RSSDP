### YamlMime:ManagedReference
items:
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase
  commentId: T:Rssdp.Infrastructure.SsdpDevicePublisherBase
  id: SsdpDevicePublisherBase
  parent: Rssdp.Infrastructure
  children:
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor(Rssdp.Infrastructure.ISsdpCommunicationsServer,System.String,System.String)
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor(Rssdp.Infrastructure.ISsdpCommunicationsServer,System.String,System.String,Rssdp.ISsdpLogger)
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.AddDevice(Rssdp.SsdpRootDevice)
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.Devices
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.Dispose(System.Boolean)
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.Log
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.NotificationBroadcastInterval
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.RemoveDevice(Rssdp.SsdpRootDevice)
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.StandardsMode
  - Rssdp.Infrastructure.SsdpDevicePublisherBase.SupportPnpRootDevice
  langs:
  - csharp
  - vb
  name: SsdpDevicePublisherBase
  nameWithType: SsdpDevicePublisherBase
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase
  type: Class
  source:
    id: SsdpDevicePublisherBase
    path: ''
    startLine: 5910
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nProvides the platform independent logic for publishing SSDP devices (notifications and search responses).\n"
  example: []
  syntax:
    content: 'public abstract class SsdpDevicePublisherBase : DisposableManagedObjectBase, IDisposable, ISsdpDevicePublisher'
    content.vb: >-
      Public MustInherit Class SsdpDevicePublisherBase
          Inherits DisposableManagedObjectBase
          Implements IDisposable, ISsdpDevicePublisher
  inheritance:
  - System.Object
  - Rssdp.Infrastructure.DisposableManagedObjectBase
  derivedClasses:
  - Rssdp.SsdpDevicePublisher
  implements:
  - System.IDisposable
  - Rssdp.Infrastructure.ISsdpDevicePublisher
  inheritedMembers:
  - Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  - Rssdp.Infrastructure.DisposableManagedObjectBase.IsDisposed
  - Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor(Rssdp.Infrastructure.ISsdpCommunicationsServer,System.String,System.String)
  commentId: M:Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor(Rssdp.Infrastructure.ISsdpCommunicationsServer,System.String,System.String)
  id: '#ctor(Rssdp.Infrastructure.ISsdpCommunicationsServer,System.String,System.String)'
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: SsdpDevicePublisherBase(ISsdpCommunicationsServer, String, String)
  nameWithType: SsdpDevicePublisherBase.SsdpDevicePublisherBase(ISsdpCommunicationsServer, String, String)
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.SsdpDevicePublisherBase(Rssdp.Infrastructure.ISsdpCommunicationsServer, System.String, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5987
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nDefault constructor.\n"
  example: []
  syntax:
    content: protected SsdpDevicePublisherBase(ISsdpCommunicationsServer communicationsServer, string osName, string osVersion)
    parameters:
    - id: communicationsServer
      type: Rssdp.Infrastructure.ISsdpCommunicationsServer
      description: The <xref href="Rssdp.Infrastructure.ISsdpCommunicationsServer" data-throw-if-not-resolved="false"></xref> implementation, used to send and receive SSDP network messages.
    - id: osName
      type: System.String
      description: Then name of the operating system running the server.
    - id: osVersion
      type: System.String
      description: The version of the operating system running the server.
    content.vb: Protected Sub New(communicationsServer As ISsdpCommunicationsServer, osName As String, osVersion As String)
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor(Rssdp.Infrastructure.ISsdpCommunicationsServer,System.String,System.String,Rssdp.ISsdpLogger)
  commentId: M:Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor(Rssdp.Infrastructure.ISsdpCommunicationsServer,System.String,System.String,Rssdp.ISsdpLogger)
  id: '#ctor(Rssdp.Infrastructure.ISsdpCommunicationsServer,System.String,System.String,Rssdp.ISsdpLogger)'
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: SsdpDevicePublisherBase(ISsdpCommunicationsServer, String, String, ISsdpLogger)
  nameWithType: SsdpDevicePublisherBase.SsdpDevicePublisherBase(ISsdpCommunicationsServer, String, String, ISsdpLogger)
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.SsdpDevicePublisherBase(Rssdp.Infrastructure.ISsdpCommunicationsServer, System.String, System.String, Rssdp.ISsdpLogger)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5998
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nFull constructor.\n"
  example: []
  syntax:
    content: protected SsdpDevicePublisherBase(ISsdpCommunicationsServer communicationsServer, string osName, string osVersion, ISsdpLogger log)
    parameters:
    - id: communicationsServer
      type: Rssdp.Infrastructure.ISsdpCommunicationsServer
      description: The <xref href="Rssdp.Infrastructure.ISsdpCommunicationsServer" data-throw-if-not-resolved="false"></xref> implementation, used to send and receive SSDP network messages.
    - id: osName
      type: System.String
      description: Then name of the operating system running the server.
    - id: osVersion
      type: System.String
      description: The version of the operating system running the server.
    - id: log
      type: Rssdp.ISsdpLogger
      description: An implementation of <xref href="Rssdp.ISsdpLogger" data-throw-if-not-resolved="false"></xref> to be used for logging activity. May be null, in which case no logging is performed.
    content.vb: Protected Sub New(communicationsServer As ISsdpCommunicationsServer, osName As String, osVersion As String, log As ISsdpLogger)
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.AddDevice(Rssdp.SsdpRootDevice)
  commentId: M:Rssdp.Infrastructure.SsdpDevicePublisherBase.AddDevice(Rssdp.SsdpRootDevice)
  id: AddDevice(Rssdp.SsdpRootDevice)
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: AddDevice(SsdpRootDevice)
  nameWithType: SsdpDevicePublisherBase.AddDevice(SsdpRootDevice)
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.AddDevice(Rssdp.SsdpRootDevice)
  type: Method
  source:
    id: AddDevice
    path: ''
    startLine: 6039
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nAdds a device (and it&apos;s children) to the list of devices being published by this server, making them discoverable to SSDP clients.\n"
  remarks: "\n<p>Adding a device causes &quot;alive&quot; notification messages to be sent immediately, or very soon after. Ensure your device/description service is running before adding the device object here.</p>\n<p>Devices added here with a non-zero cache life time will also have notifications broadcast periodically.</p>\n<p>This method ignores duplicate device adds (if the same device instance is added multiple times, the second and subsequent add calls do nothing).</p>\n"
  example: []
  syntax:
    content: public void AddDevice(SsdpRootDevice device)
    parameters:
    - id: device
      type: Rssdp.SsdpRootDevice
      description: The <xref href="Rssdp.SsdpDevice" data-throw-if-not-resolved="false"></xref> instance to add.
    content.vb: Public Sub AddDevice(device As SsdpRootDevice)
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.AddDevice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the <code data-dev-comment-type="paramref" class="paramref">device</code> argument is null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if the <code data-dev-comment-type="paramref" class="paramref">device</code> contains property values that are not acceptable to the UPnP 1.0 specification.
  implements:
  - Rssdp.Infrastructure.ISsdpDevicePublisher.AddDevice(Rssdp.SsdpRootDevice)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.RemoveDevice(Rssdp.SsdpRootDevice)
  commentId: M:Rssdp.Infrastructure.SsdpDevicePublisherBase.RemoveDevice(Rssdp.SsdpRootDevice)
  id: RemoveDevice(Rssdp.SsdpRootDevice)
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: RemoveDevice(SsdpRootDevice)
  nameWithType: SsdpDevicePublisherBase.RemoveDevice(SsdpRootDevice)
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.RemoveDevice(Rssdp.SsdpRootDevice)
  type: Method
  source:
    id: RemoveDevice
    path: ''
    startLine: 6085
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nRemoves a device (and it&apos;s children) from the list of devices being published by this server, making them undiscoverable.\n"
  remarks: "\n<p>Removing a device causes &quot;byebye&quot; notification messages to be sent immediately, advising clients of the device/service becoming unavailable. We recommend removing the device from the published list before shutting down the actual device/service, if possible.</p>\n<p>This method does nothing if the device was not found in the collection.</p>\n"
  example: []
  syntax:
    content: public void RemoveDevice(SsdpRootDevice device)
    parameters:
    - id: device
      type: Rssdp.SsdpRootDevice
      description: The <xref href="Rssdp.SsdpDevice" data-throw-if-not-resolved="false"></xref> instance to add.
    content.vb: Public Sub RemoveDevice(device As SsdpRootDevice)
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.RemoveDevice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the <code data-dev-comment-type="paramref" class="paramref">device</code> argument is null.
  implements:
  - Rssdp.Infrastructure.ISsdpDevicePublisher.RemoveDevice(Rssdp.SsdpRootDevice)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.Log
  commentId: P:Rssdp.Infrastructure.SsdpDevicePublisherBase.Log
  id: Log
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: SsdpDevicePublisherBase.Log
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.Log
  type: Property
  source:
    id: Log
    path: ''
    startLine: 6129
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nReturns a reference to the injected <xref href=\"Rssdp.ISsdpLogger\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  remarks: "\n<p>Should never return null. If null was injected a reference to an internal null logger should be returned.</p>\n"
  example: []
  syntax:
    content: protected ISsdpLogger Log { get; }
    parameters: []
    return:
      type: Rssdp.ISsdpLogger
    content.vb: Protected ReadOnly Property Log As ISsdpLogger
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.Log*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.Devices
  commentId: P:Rssdp.Infrastructure.SsdpDevicePublisherBase.Devices
  id: Devices
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: Devices
  nameWithType: SsdpDevicePublisherBase.Devices
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.Devices
  type: Property
  source:
    id: Devices
    path: ''
    startLine: 6137
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nReturns a read only list of devices being published by this instance.\n"
  example: []
  syntax:
    content: public IEnumerable<SsdpRootDevice> Devices { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Rssdp.SsdpRootDevice}
    content.vb: Public ReadOnly Property Devices As IEnumerable(Of SsdpRootDevice)
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.Devices*
  implements:
  - Rssdp.Infrastructure.ISsdpDevicePublisher.Devices
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.SupportPnpRootDevice
  commentId: P:Rssdp.Infrastructure.SsdpDevicePublisherBase.SupportPnpRootDevice
  id: SupportPnpRootDevice
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: SupportPnpRootDevice
  nameWithType: SsdpDevicePublisherBase.SupportPnpRootDevice
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.SupportPnpRootDevice
  type: Property
  source:
    id: SupportPnpRootDevice
    path: ''
    startLine: 6152
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nIf true (default) treats root devices as both upnp:rootdevice and pnp:rootdevice types.\n"
  remarks: "\n<p>Enabling this option will cause devices to show up in Microsoft Windows Explorer&apos;s network screens (if discovery is enabled etc.). Windows Explorer appears to search only for pnp:rootdeivce and not upnp:rootdevice.</p>\n<p>If false, the system will only use upnp:rootdevice for notifiation broadcasts and and search responses, which is correct according to the UPnP/SSDP spec.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Set StandardsMode to SsdpStandardsMode.Relaxed instead.")]

      public bool SupportPnpRootDevice { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("Set StandardsMode to SsdpStandardsMode.Relaxed instead.")>

      Public Property SupportPnpRootDevice As Boolean
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.SupportPnpRootDevice*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Set StandardsMode to SsdpStandardsMode.Relaxed instead.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.StandardsMode
  commentId: P:Rssdp.Infrastructure.SsdpDevicePublisherBase.StandardsMode
  id: StandardsMode
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: StandardsMode
  nameWithType: SsdpDevicePublisherBase.StandardsMode
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.StandardsMode
  type: Property
  source:
    id: StandardsMode
    path: ''
    startLine: 6172
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nSets or returns a value from the <xref href=\"Rssdp.SsdpStandardsMode\" data-throw-if-not-resolved=\"false\"></xref> controlling how strictly the publisher obeys the SSDP standard.\n"
  remarks: "\n<p>Using relaxed mode will process search requests even if the MX header is missing.</p>\n"
  example: []
  syntax:
    content: public SsdpStandardsMode StandardsMode { get; set; }
    parameters: []
    return:
      type: Rssdp.SsdpStandardsMode
    content.vb: Public Property StandardsMode As SsdpStandardsMode
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.StandardsMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.NotificationBroadcastInterval
  commentId: P:Rssdp.Infrastructure.SsdpDevicePublisherBase.NotificationBroadcastInterval
  id: NotificationBroadcastInterval
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: NotificationBroadcastInterval
  nameWithType: SsdpDevicePublisherBase.NotificationBroadcastInterval
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.NotificationBroadcastInterval
  type: Property
  source:
    id: NotificationBroadcastInterval
    path: ''
    startLine: 6198
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nSets or returns a fixed interval at which alive notifications for services exposed by this publisher instance are broadcast.\n"
  remarks: "\n<p>If this is set to <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> then the system will follow the process recommended \nby the SSDP spec and calculate a randomised interval based on the cache life times of the published services.\nThe default and recommended value is TimeSpan.Zero.\n</p>\n<p>While (zero and) any positive <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value are allowed, the SSDP specification says \nnotifications should not be broadcast more often than 15 minutes. If you wish to remain compatible with the SSDP\nspecification, do not set this property to a value greater than zero but less than 15 minutes.\n</p>\n"
  example: []
  syntax:
    content: public TimeSpan NotificationBroadcastInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property NotificationBroadcastInterval As TimeSpan
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.NotificationBroadcastInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.Dispose(System.Boolean)
  commentId: M:Rssdp.Infrastructure.SsdpDevicePublisherBase.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Rssdp.Infrastructure.SsdpDevicePublisherBase
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: SsdpDevicePublisherBase.Dispose(Boolean)
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 6222
  assemblies:
  - cs.temp.dll
  namespace: Rssdp.Infrastructure
  summary: "\nStops listening for requests, stops sending periodic broadcasts, disposes all internal resources.\n"
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  overload: Rssdp.Infrastructure.SsdpDevicePublisherBase.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Rssdp.Infrastructure
  commentId: N:Rssdp.Infrastructure
  isExternal: false
  name: Rssdp.Infrastructure
  nameWithType: Rssdp.Infrastructure
  fullName: Rssdp.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase
  commentId: T:Rssdp.Infrastructure.DisposableManagedObjectBase
  parent: Rssdp.Infrastructure
  isExternal: false
  name: DisposableManagedObjectBase
  nameWithType: DisposableManagedObjectBase
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Rssdp.Infrastructure.ISsdpDevicePublisher
  commentId: T:Rssdp.Infrastructure.ISsdpDevicePublisher
  parent: Rssdp.Infrastructure
  isExternal: false
  name: ISsdpDevicePublisher
  nameWithType: ISsdpDevicePublisher
  fullName: Rssdp.Infrastructure.ISsdpDevicePublisher
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  commentId: M:Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  parent: Rssdp.Infrastructure.DisposableManagedObjectBase
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: DisposableManagedObjectBase.ThrowIfDisposed()
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed()
  spec.csharp:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: DisposableManagedObjectBase.ThrowIfDisposed
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: DisposableManagedObjectBase.ThrowIfDisposed
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase.IsDisposed
  commentId: P:Rssdp.Infrastructure.DisposableManagedObjectBase.IsDisposed
  parent: Rssdp.Infrastructure.DisposableManagedObjectBase
  isExternal: false
  name: IsDisposed
  nameWithType: DisposableManagedObjectBase.IsDisposed
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.IsDisposed
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  commentId: M:Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  parent: Rssdp.Infrastructure.DisposableManagedObjectBase
  isExternal: false
  name: Dispose()
  nameWithType: DisposableManagedObjectBase.Dispose()
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose()
  spec.csharp:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
    name: Dispose
    nameWithType: DisposableManagedObjectBase.Dispose
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
    name: Dispose
    nameWithType: DisposableManagedObjectBase.Dispose
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Rssdp.Infrastructure.ISsdpCommunicationsServer
  commentId: T:Rssdp.Infrastructure.ISsdpCommunicationsServer
  parent: Rssdp.Infrastructure
  isExternal: false
  name: ISsdpCommunicationsServer
  nameWithType: ISsdpCommunicationsServer
  fullName: Rssdp.Infrastructure.ISsdpCommunicationsServer
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor*
  commentId: Overload:Rssdp.Infrastructure.SsdpDevicePublisherBase.#ctor
  isExternal: false
  name: SsdpDevicePublisherBase
  nameWithType: SsdpDevicePublisherBase.SsdpDevicePublisherBase
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.SsdpDevicePublisherBase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Rssdp.ISsdpLogger
  commentId: T:Rssdp.ISsdpLogger
  parent: Rssdp
  isExternal: false
  name: ISsdpLogger
  nameWithType: ISsdpLogger
  fullName: Rssdp.ISsdpLogger
- uid: Rssdp
  commentId: N:Rssdp
  isExternal: false
  name: Rssdp
  nameWithType: Rssdp
  fullName: Rssdp
- uid: Rssdp.SsdpDevice
  commentId: T:Rssdp.SsdpDevice
  parent: Rssdp
  isExternal: false
  name: SsdpDevice
  nameWithType: SsdpDevice
  fullName: Rssdp.SsdpDevice
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.AddDevice*
  commentId: Overload:Rssdp.Infrastructure.SsdpDevicePublisherBase.AddDevice
  isExternal: false
  name: AddDevice
  nameWithType: SsdpDevicePublisherBase.AddDevice
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.AddDevice
- uid: Rssdp.Infrastructure.ISsdpDevicePublisher.AddDevice(Rssdp.SsdpRootDevice)
  commentId: M:Rssdp.Infrastructure.ISsdpDevicePublisher.AddDevice(Rssdp.SsdpRootDevice)
  parent: Rssdp.Infrastructure.ISsdpDevicePublisher
  isExternal: false
  name: AddDevice(SsdpRootDevice)
  nameWithType: ISsdpDevicePublisher.AddDevice(SsdpRootDevice)
  fullName: Rssdp.Infrastructure.ISsdpDevicePublisher.AddDevice(Rssdp.SsdpRootDevice)
  spec.csharp:
  - uid: Rssdp.Infrastructure.ISsdpDevicePublisher.AddDevice(Rssdp.SsdpRootDevice)
    name: AddDevice
    nameWithType: ISsdpDevicePublisher.AddDevice
    fullName: Rssdp.Infrastructure.ISsdpDevicePublisher.AddDevice
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rssdp.SsdpRootDevice
    name: SsdpRootDevice
    nameWithType: SsdpRootDevice
    fullName: Rssdp.SsdpRootDevice
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.ISsdpDevicePublisher.AddDevice(Rssdp.SsdpRootDevice)
    name: AddDevice
    nameWithType: ISsdpDevicePublisher.AddDevice
    fullName: Rssdp.Infrastructure.ISsdpDevicePublisher.AddDevice
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rssdp.SsdpRootDevice
    name: SsdpRootDevice
    nameWithType: SsdpRootDevice
    fullName: Rssdp.SsdpRootDevice
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Rssdp.SsdpRootDevice
  commentId: T:Rssdp.SsdpRootDevice
  parent: Rssdp
  isExternal: false
  name: SsdpRootDevice
  nameWithType: SsdpRootDevice
  fullName: Rssdp.SsdpRootDevice
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.RemoveDevice*
  commentId: Overload:Rssdp.Infrastructure.SsdpDevicePublisherBase.RemoveDevice
  isExternal: false
  name: RemoveDevice
  nameWithType: SsdpDevicePublisherBase.RemoveDevice
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.RemoveDevice
- uid: Rssdp.Infrastructure.ISsdpDevicePublisher.RemoveDevice(Rssdp.SsdpRootDevice)
  commentId: M:Rssdp.Infrastructure.ISsdpDevicePublisher.RemoveDevice(Rssdp.SsdpRootDevice)
  parent: Rssdp.Infrastructure.ISsdpDevicePublisher
  isExternal: false
  name: RemoveDevice(SsdpRootDevice)
  nameWithType: ISsdpDevicePublisher.RemoveDevice(SsdpRootDevice)
  fullName: Rssdp.Infrastructure.ISsdpDevicePublisher.RemoveDevice(Rssdp.SsdpRootDevice)
  spec.csharp:
  - uid: Rssdp.Infrastructure.ISsdpDevicePublisher.RemoveDevice(Rssdp.SsdpRootDevice)
    name: RemoveDevice
    nameWithType: ISsdpDevicePublisher.RemoveDevice
    fullName: Rssdp.Infrastructure.ISsdpDevicePublisher.RemoveDevice
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rssdp.SsdpRootDevice
    name: SsdpRootDevice
    nameWithType: SsdpRootDevice
    fullName: Rssdp.SsdpRootDevice
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.ISsdpDevicePublisher.RemoveDevice(Rssdp.SsdpRootDevice)
    name: RemoveDevice
    nameWithType: ISsdpDevicePublisher.RemoveDevice
    fullName: Rssdp.Infrastructure.ISsdpDevicePublisher.RemoveDevice
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rssdp.SsdpRootDevice
    name: SsdpRootDevice
    nameWithType: SsdpRootDevice
    fullName: Rssdp.SsdpRootDevice
  - name: )
    nameWithType: )
    fullName: )
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.Log*
  commentId: Overload:Rssdp.Infrastructure.SsdpDevicePublisherBase.Log
  isExternal: false
  name: Log
  nameWithType: SsdpDevicePublisherBase.Log
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.Log
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.Devices*
  commentId: Overload:Rssdp.Infrastructure.SsdpDevicePublisherBase.Devices
  isExternal: false
  name: Devices
  nameWithType: SsdpDevicePublisherBase.Devices
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.Devices
- uid: Rssdp.Infrastructure.ISsdpDevicePublisher.Devices
  commentId: P:Rssdp.Infrastructure.ISsdpDevicePublisher.Devices
  parent: Rssdp.Infrastructure.ISsdpDevicePublisher
  isExternal: false
  name: Devices
  nameWithType: ISsdpDevicePublisher.Devices
  fullName: Rssdp.Infrastructure.ISsdpDevicePublisher.Devices
- uid: System.Collections.Generic.IEnumerable{Rssdp.SsdpRootDevice}
  commentId: T:System.Collections.Generic.IEnumerable{Rssdp.SsdpRootDevice}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SsdpRootDevice>
  nameWithType: IEnumerable<SsdpRootDevice>
  fullName: System.Collections.Generic.IEnumerable<Rssdp.SsdpRootDevice>
  nameWithType.vb: IEnumerable(Of SsdpRootDevice)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Rssdp.SsdpRootDevice)
  name.vb: IEnumerable(Of SsdpRootDevice)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rssdp.SsdpRootDevice
    name: SsdpRootDevice
    nameWithType: SsdpRootDevice
    fullName: Rssdp.SsdpRootDevice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rssdp.SsdpRootDevice
    name: SsdpRootDevice
    nameWithType: SsdpRootDevice
    fullName: Rssdp.SsdpRootDevice
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.SupportPnpRootDevice*
  commentId: Overload:Rssdp.Infrastructure.SsdpDevicePublisherBase.SupportPnpRootDevice
  isExternal: false
  name: SupportPnpRootDevice
  nameWithType: SsdpDevicePublisherBase.SupportPnpRootDevice
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.SupportPnpRootDevice
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Rssdp.SsdpStandardsMode
  commentId: T:Rssdp.SsdpStandardsMode
  parent: Rssdp
  isExternal: false
  name: SsdpStandardsMode
  nameWithType: SsdpStandardsMode
  fullName: Rssdp.SsdpStandardsMode
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.StandardsMode*
  commentId: Overload:Rssdp.Infrastructure.SsdpDevicePublisherBase.StandardsMode
  isExternal: false
  name: StandardsMode
  nameWithType: SsdpDevicePublisherBase.StandardsMode
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.StandardsMode
- uid: System.TimeSpan.Zero
  commentId: F:System.TimeSpan.Zero
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.NotificationBroadcastInterval*
  commentId: Overload:Rssdp.Infrastructure.SsdpDevicePublisherBase.NotificationBroadcastInterval
  isExternal: false
  name: NotificationBroadcastInterval
  nameWithType: SsdpDevicePublisherBase.NotificationBroadcastInterval
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.NotificationBroadcastInterval
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  commentId: M:Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  parent: Rssdp.Infrastructure.DisposableManagedObjectBase
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DisposableManagedObjectBase.Dispose(Boolean)
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  spec.csharp:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DisposableManagedObjectBase.Dispose
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DisposableManagedObjectBase.Dispose
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rssdp.Infrastructure.SsdpDevicePublisherBase.Dispose*
  commentId: Overload:Rssdp.Infrastructure.SsdpDevicePublisherBase.Dispose
  isExternal: false
  name: Dispose
  nameWithType: SsdpDevicePublisherBase.Dispose
  fullName: Rssdp.Infrastructure.SsdpDevicePublisherBase.Dispose
