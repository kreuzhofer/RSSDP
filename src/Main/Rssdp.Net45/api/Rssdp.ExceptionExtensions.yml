### YamlMime:ManagedReference
items:
- uid: Rssdp.ExceptionExtensions
  commentId: T:Rssdp.ExceptionExtensions
  id: ExceptionExtensions
  parent: Rssdp
  children:
  - Rssdp.ExceptionExtensions.IsCritical(System.Exception)
  - Rssdp.ExceptionExtensions.IsCritical(System.Exception)
  langs:
  - csharp
  - vb
  name: ExceptionExtensions
  nameWithType: ExceptionExtensions
  fullName: Rssdp.ExceptionExtensions
  type: Class
  source:
    id: ExceptionExtensions
    path: ''
    startLine: 8584
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nProvides extension methods to <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> and derived objects.\n"
  example: []
  syntax:
    content: public static class ExceptionExtensions
    content.vb: Public Module ExceptionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Rssdp.ExceptionExtensions.IsCritical(System.Exception)
  commentId: M:Rssdp.ExceptionExtensions.IsCritical(System.Exception)
  id: IsCritical(System.Exception)
  isExtensionMethod: true
  parent: Rssdp.ExceptionExtensions
  langs:
  - csharp
  - vb
  name: IsCritical(Exception)
  nameWithType: ExceptionExtensions.IsCritical(Exception)
  fullName: Rssdp.ExceptionExtensions.IsCritical(System.Exception)
  type: Method
  source:
    id: IsCritical
    path: ''
    startLine: 2094
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nReturns true of the specified exception is one that indicates some form of memory corruption, out of memory state or other fatal exception that should *never* be handled by user code.\n"
  remarks: "\n<p>Doesn&apos;t check for System.StackOverflowExceptions as if the stack really is full calling this method might check, therefore calling code must explicitly handle that exception type itself.</p>\n<p>Specifically checks for the following exception types;\n\n\n</p>\n"
  example: []
  syntax:
    content: public static bool IsCritical(this Exception exception)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to check.
    return:
      type: System.Boolean
      description: True if the specified exception is considered critical and should be re-thrown and not otherwise handled by user code.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsCritical(exception As Exception) As Boolean
  overload: Rssdp.ExceptionExtensions.IsCritical*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Rssdp.ExceptionExtensions.IsCritical(System.Exception)
  commentId: M:Rssdp.ExceptionExtensions.IsCritical(System.Exception)
  id: IsCritical(System.Exception)
  isExtensionMethod: true
  parent: Rssdp.ExceptionExtensions
  langs:
  - csharp
  - vb
  name: IsCritical(Exception)
  nameWithType: ExceptionExtensions.IsCritical(Exception)
  fullName: Rssdp.ExceptionExtensions.IsCritical(System.Exception)
  type: Method
  source:
    id: IsCritical
    path: ''
    startLine: 8602
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nReturns true of the specified exception is one that indicates some form of memory corruption, out of memory state or other fatal exception that should *never* be handled by user code.\n"
  remarks: "\n<p>Doesn&apos;t check for System.StackOverflowExceptions as if the stack really is full calling this method might check, therefore calling code must explicitly handle that exception type itself.</p>\n<p>Specifically checks for the following exception types;\n\n\n</p>\n"
  example: []
  syntax:
    content: public static bool IsCritical(this Exception exception)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to check.
    return:
      type: System.Boolean
      description: True if the specified exception is considered critical and should be re-thrown and not otherwise handled by user code.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsCritical(exception As Exception) As Boolean
  overload: Rssdp.ExceptionExtensions.IsCritical*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Rssdp
  commentId: N:Rssdp
  isExternal: false
  name: Rssdp
  nameWithType: Rssdp
  fullName: Rssdp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Rssdp.ExceptionExtensions.IsCritical*
  commentId: Overload:Rssdp.ExceptionExtensions.IsCritical
  isExternal: false
  name: IsCritical
  nameWithType: ExceptionExtensions.IsCritical
  fullName: Rssdp.ExceptionExtensions.IsCritical
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
