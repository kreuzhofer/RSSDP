### YamlMime:ManagedReference
items:
- uid: Rssdp.UdpSocket
  commentId: T:Rssdp.UdpSocket
  id: UdpSocket
  parent: Rssdp
  children:
  - Rssdp.UdpSocket.#ctor(Socket,System.String,System.Int32)
  - Rssdp.UdpSocket.#ctor(System.Net.Sockets.Socket,System.Int32,System.String)
  - Rssdp.UdpSocket.Dispose(System.Boolean)
  - Rssdp.UdpSocket.Dispose(System.Boolean)
  - Rssdp.UdpSocket.Dispose(System.Boolean)
  - Rssdp.UdpSocket.ReceiveAsync
  - Rssdp.UdpSocket.ReceiveAsync
  - Rssdp.UdpSocket.ReceiveAsync
  - Rssdp.UdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  - Rssdp.UdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  - Rssdp.UdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  langs:
  - csharp
  - vb
  name: UdpSocket
  nameWithType: UdpSocket
  fullName: Rssdp.UdpSocket
  type: Class
  source:
    id: UdpSocket
    path: ''
    startLine: 8964
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: 'public sealed class UdpSocket : DisposableManagedObjectBase, IUdpSocket, IDisposable'
    content.vb: >-
      Public NotInheritable Class UdpSocket
          Inherits DisposableManagedObjectBase
          Implements IUdpSocket, IDisposable
  inheritance:
  - System.Object
  - Rssdp.Infrastructure.DisposableManagedObjectBase
  implements:
  - Rssdp.Infrastructure.IUdpSocket
  - System.IDisposable
  inheritedMembers:
  - Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  - Rssdp.Infrastructure.DisposableManagedObjectBase.IsDisposed
  - Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Rssdp.UdpSocket.ReceiveAsync
  commentId: M:Rssdp.UdpSocket.ReceiveAsync
  id: ReceiveAsync
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: ReceiveAsync()
  nameWithType: UdpSocket.ReceiveAsync()
  fullName: Rssdp.UdpSocket.ReceiveAsync()
  type: Method
  source:
    id: ReceiveAsync
    path: ''
    startLine: 903
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: public Task<ReceivedUdpData> ReceiveAsync()
    return:
      type: System.Threading.Tasks.Task{Rssdp.Infrastructure.ReceivedUdpData}
    content.vb: Public Function ReceiveAsync As Task(Of ReceivedUdpData)
  overload: Rssdp.UdpSocket.ReceiveAsync*
  implements:
  - Rssdp.Infrastructure.IUdpSocket.ReceiveAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.UdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  commentId: M:Rssdp.UdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  id: SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], UdpEndPoint)
  nameWithType: UdpSocket.SendTo(Byte[], UdpEndPoint)
  fullName: Rssdp.UdpSocket.SendTo(System.Byte[], Rssdp.Infrastructure.UdpEndPoint)
  type: Method
  source:
    id: SendTo
    path: ''
    startLine: 908
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: public void SendTo(byte[] messageData, UdpEndPoint endPoint)
    parameters:
    - id: messageData
      type: System.Byte[]
    - id: endPoint
      type: Rssdp.Infrastructure.UdpEndPoint
    content.vb: Public Sub SendTo(messageData As Byte(), endPoint As UdpEndPoint)
  overload: Rssdp.UdpSocket.SendTo*
  implements:
  - Rssdp.Infrastructure.IUdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  nameWithType.vb: UdpSocket.SendTo(Byte(), UdpEndPoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Rssdp.UdpSocket.SendTo(System.Byte(), Rssdp.Infrastructure.UdpEndPoint)
  name.vb: SendTo(Byte(), UdpEndPoint)
- uid: Rssdp.UdpSocket.Dispose(System.Boolean)
  commentId: M:Rssdp.UdpSocket.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: UdpSocket.Dispose(Boolean)
  fullName: Rssdp.UdpSocket.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 913
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  overload: Rssdp.UdpSocket.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Rssdp.UdpSocket.#ctor(System.Net.Sockets.Socket,System.Int32,System.String)
  commentId: M:Rssdp.UdpSocket.#ctor(System.Net.Sockets.Socket,System.Int32,System.String)
  id: '#ctor(System.Net.Sockets.Socket,System.Int32,System.String)'
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: UdpSocket(Net.Sockets.Socket, Int32, String)
  nameWithType: UdpSocket.UdpSocket(Net.Sockets.Socket, Int32, String)
  fullName: Rssdp.UdpSocket.UdpSocket(System.Net.Sockets.Socket, System.Int32, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 8365
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: public UdpSocket(Net.Sockets.Socket socket, int localPort, string ipAddress)
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
    - id: localPort
      type: System.Int32
    - id: ipAddress
      type: System.String
    content.vb: Public Sub New(socket As Net.Sockets.Socket, localPort As Integer, ipAddress As String)
  overload: Rssdp.UdpSocket.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.UdpSocket.ReceiveAsync
  commentId: M:Rssdp.UdpSocket.ReceiveAsync
  id: ReceiveAsync
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: ReceiveAsync()
  nameWithType: UdpSocket.ReceiveAsync()
  fullName: Rssdp.UdpSocket.ReceiveAsync()
  type: Method
  source:
    id: ReceiveAsync
    path: ''
    startLine: 8387
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: public Task<ReceivedUdpData> ReceiveAsync()
    return:
      type: System.Threading.Tasks.Task{Rssdp.Infrastructure.ReceivedUdpData}
    content.vb: Public Function ReceiveAsync As Task(Of ReceivedUdpData)
  overload: Rssdp.UdpSocket.ReceiveAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.UdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  commentId: M:Rssdp.UdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  id: SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], UdpEndPoint)
  nameWithType: UdpSocket.SendTo(Byte[], UdpEndPoint)
  fullName: Rssdp.UdpSocket.SendTo(System.Byte[], Rssdp.Infrastructure.UdpEndPoint)
  type: Method
  source:
    id: SendTo
    path: ''
    startLine: 8426
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: public void SendTo(byte[] messageData, UdpEndPoint endPoint)
    parameters:
    - id: messageData
      type: System.Byte[]
    - id: endPoint
      type: Rssdp.Infrastructure.UdpEndPoint
    content.vb: Public Sub SendTo(messageData As Byte(), endPoint As UdpEndPoint)
  overload: Rssdp.UdpSocket.SendTo*
  nameWithType.vb: UdpSocket.SendTo(Byte(), UdpEndPoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Rssdp.UdpSocket.SendTo(System.Byte(), Rssdp.Infrastructure.UdpEndPoint)
  name.vb: SendTo(Byte(), UdpEndPoint)
- uid: Rssdp.UdpSocket.Dispose(System.Boolean)
  commentId: M:Rssdp.UdpSocket.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: UdpSocket.Dispose(Boolean)
  fullName: Rssdp.UdpSocket.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 8470
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  overload: Rssdp.UdpSocket.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Rssdp.UdpSocket.#ctor(Socket,System.String,System.Int32)
  commentId: M:Rssdp.UdpSocket.#ctor(Socket,System.String,System.Int32)
  id: '#ctor(Socket,System.String,System.Int32)'
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: UdpSocket(Socket, String, Int32)
  nameWithType: UdpSocket.UdpSocket(Socket, String, Int32)
  fullName: Rssdp.UdpSocket.UdpSocket(Socket, System.String, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 8976
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: public UdpSocket(Socket socket, string ipAddress, int localPort)
    parameters:
    - id: socket
      type: Socket
    - id: ipAddress
      type: System.String
    - id: localPort
      type: System.Int32
    content.vb: Public Sub New(socket As Socket, ipAddress As String, localPort As Integer)
  overload: Rssdp.UdpSocket.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.UdpSocket.ReceiveAsync
  commentId: M:Rssdp.UdpSocket.ReceiveAsync
  id: ReceiveAsync
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: ReceiveAsync()
  nameWithType: UdpSocket.ReceiveAsync()
  fullName: Rssdp.UdpSocket.ReceiveAsync()
  type: Method
  source:
    id: ReceiveAsync
    path: ''
    startLine: 8994
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: public Task<ReceivedUdpData> ReceiveAsync()
    return:
      type: System.Threading.Tasks.Task{Rssdp.Infrastructure.ReceivedUdpData}
    content.vb: Public Function ReceiveAsync As Task(Of ReceivedUdpData)
  overload: Rssdp.UdpSocket.ReceiveAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.UdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  commentId: M:Rssdp.UdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  id: SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], UdpEndPoint)
  nameWithType: UdpSocket.SendTo(Byte[], UdpEndPoint)
  fullName: Rssdp.UdpSocket.SendTo(System.Byte[], Rssdp.Infrastructure.UdpEndPoint)
  type: Method
  source:
    id: SendTo
    path: ''
    startLine: 9028
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: public void SendTo(byte[] messageData, UdpEndPoint endPoint)
    parameters:
    - id: messageData
      type: System.Byte[]
    - id: endPoint
      type: Rssdp.Infrastructure.UdpEndPoint
    content.vb: Public Sub SendTo(messageData As Byte(), endPoint As UdpEndPoint)
  overload: Rssdp.UdpSocket.SendTo*
  nameWithType.vb: UdpSocket.SendTo(Byte(), UdpEndPoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Rssdp.UdpSocket.SendTo(System.Byte(), Rssdp.Infrastructure.UdpEndPoint)
  name.vb: SendTo(Byte(), UdpEndPoint)
- uid: Rssdp.UdpSocket.Dispose(System.Boolean)
  commentId: M:Rssdp.UdpSocket.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Rssdp.UdpSocket
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: UdpSocket.Dispose(Boolean)
  fullName: Rssdp.UdpSocket.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 9042
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  overload: Rssdp.UdpSocket.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Rssdp
  commentId: N:Rssdp
  isExternal: false
  name: Rssdp
  nameWithType: Rssdp
  fullName: Rssdp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase
  commentId: T:Rssdp.Infrastructure.DisposableManagedObjectBase
  parent: Rssdp.Infrastructure
  isExternal: false
  name: DisposableManagedObjectBase
  nameWithType: DisposableManagedObjectBase
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase
- uid: Rssdp.Infrastructure.IUdpSocket
  commentId: T:Rssdp.Infrastructure.IUdpSocket
  parent: Rssdp.Infrastructure
  isExternal: false
  name: IUdpSocket
  nameWithType: IUdpSocket
  fullName: Rssdp.Infrastructure.IUdpSocket
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  commentId: M:Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  parent: Rssdp.Infrastructure.DisposableManagedObjectBase
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: DisposableManagedObjectBase.ThrowIfDisposed()
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed()
  spec.csharp:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: DisposableManagedObjectBase.ThrowIfDisposed
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: DisposableManagedObjectBase.ThrowIfDisposed
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase.IsDisposed
  commentId: P:Rssdp.Infrastructure.DisposableManagedObjectBase.IsDisposed
  parent: Rssdp.Infrastructure.DisposableManagedObjectBase
  isExternal: false
  name: IsDisposed
  nameWithType: DisposableManagedObjectBase.IsDisposed
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.IsDisposed
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  commentId: M:Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  parent: Rssdp.Infrastructure.DisposableManagedObjectBase
  isExternal: false
  name: Dispose()
  nameWithType: DisposableManagedObjectBase.Dispose()
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose()
  spec.csharp:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
    name: Dispose
    nameWithType: DisposableManagedObjectBase.Dispose
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
    name: Dispose
    nameWithType: DisposableManagedObjectBase.Dispose
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Rssdp.Infrastructure
  commentId: N:Rssdp.Infrastructure
  isExternal: false
  name: Rssdp.Infrastructure
  nameWithType: Rssdp.Infrastructure
  fullName: Rssdp.Infrastructure
- uid: Rssdp.UdpSocket.ReceiveAsync*
  commentId: Overload:Rssdp.UdpSocket.ReceiveAsync
  isExternal: false
  name: ReceiveAsync
  nameWithType: UdpSocket.ReceiveAsync
  fullName: Rssdp.UdpSocket.ReceiveAsync
- uid: Rssdp.Infrastructure.IUdpSocket.ReceiveAsync
  commentId: M:Rssdp.Infrastructure.IUdpSocket.ReceiveAsync
  parent: Rssdp.Infrastructure.IUdpSocket
  isExternal: false
  name: ReceiveAsync()
  nameWithType: IUdpSocket.ReceiveAsync()
  fullName: Rssdp.Infrastructure.IUdpSocket.ReceiveAsync()
  spec.csharp:
  - uid: Rssdp.Infrastructure.IUdpSocket.ReceiveAsync
    name: ReceiveAsync
    nameWithType: IUdpSocket.ReceiveAsync
    fullName: Rssdp.Infrastructure.IUdpSocket.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.IUdpSocket.ReceiveAsync
    name: ReceiveAsync
    nameWithType: IUdpSocket.ReceiveAsync
    fullName: Rssdp.Infrastructure.IUdpSocket.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Rssdp.Infrastructure.ReceivedUdpData}
  commentId: T:System.Threading.Tasks.Task{Rssdp.Infrastructure.ReceivedUdpData}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReceivedUdpData>
  nameWithType: Task<ReceivedUdpData>
  fullName: System.Threading.Tasks.Task<Rssdp.Infrastructure.ReceivedUdpData>
  nameWithType.vb: Task(Of ReceivedUdpData)
  fullName.vb: System.Threading.Tasks.Task(Of Rssdp.Infrastructure.ReceivedUdpData)
  name.vb: Task(Of ReceivedUdpData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rssdp.Infrastructure.ReceivedUdpData
    name: ReceivedUdpData
    nameWithType: ReceivedUdpData
    fullName: Rssdp.Infrastructure.ReceivedUdpData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rssdp.Infrastructure.ReceivedUdpData
    name: ReceivedUdpData
    nameWithType: ReceivedUdpData
    fullName: Rssdp.Infrastructure.ReceivedUdpData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Rssdp.UdpSocket.SendTo*
  commentId: Overload:Rssdp.UdpSocket.SendTo
  isExternal: false
  name: SendTo
  nameWithType: UdpSocket.SendTo
  fullName: Rssdp.UdpSocket.SendTo
- uid: Rssdp.Infrastructure.IUdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  commentId: M:Rssdp.Infrastructure.IUdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
  parent: Rssdp.Infrastructure.IUdpSocket
  isExternal: true
  name: SendTo(Byte[], UdpEndPoint)
  nameWithType: IUdpSocket.SendTo(Byte[], UdpEndPoint)
  fullName: Rssdp.Infrastructure.IUdpSocket.SendTo(System.Byte[], Rssdp.Infrastructure.UdpEndPoint)
  nameWithType.vb: IUdpSocket.SendTo(Byte(), UdpEndPoint)
  fullName.vb: Rssdp.Infrastructure.IUdpSocket.SendTo(System.Byte(), Rssdp.Infrastructure.UdpEndPoint)
  name.vb: SendTo(Byte(), UdpEndPoint)
  spec.csharp:
  - uid: Rssdp.Infrastructure.IUdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
    name: SendTo
    nameWithType: IUdpSocket.SendTo
    fullName: Rssdp.Infrastructure.IUdpSocket.SendTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rssdp.Infrastructure.UdpEndPoint
    name: UdpEndPoint
    nameWithType: UdpEndPoint
    fullName: Rssdp.Infrastructure.UdpEndPoint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.IUdpSocket.SendTo(System.Byte[],Rssdp.Infrastructure.UdpEndPoint)
    name: SendTo
    nameWithType: IUdpSocket.SendTo
    fullName: Rssdp.Infrastructure.IUdpSocket.SendTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rssdp.Infrastructure.UdpEndPoint
    name: UdpEndPoint
    nameWithType: UdpEndPoint
    fullName: Rssdp.Infrastructure.UdpEndPoint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Rssdp.Infrastructure.UdpEndPoint
  commentId: T:Rssdp.Infrastructure.UdpEndPoint
  parent: Rssdp.Infrastructure
  isExternal: false
  name: UdpEndPoint
  nameWithType: UdpEndPoint
  fullName: Rssdp.Infrastructure.UdpEndPoint
- uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  commentId: M:Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  parent: Rssdp.Infrastructure.DisposableManagedObjectBase
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DisposableManagedObjectBase.Dispose(Boolean)
  fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
  spec.csharp:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DisposableManagedObjectBase.Dispose
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DisposableManagedObjectBase.Dispose
    fullName: Rssdp.Infrastructure.DisposableManagedObjectBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rssdp.UdpSocket.Dispose*
  commentId: Overload:Rssdp.UdpSocket.Dispose
  isExternal: false
  name: Dispose
  nameWithType: UdpSocket.Dispose
  fullName: Rssdp.UdpSocket.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Rssdp.UdpSocket.#ctor*
  commentId: Overload:Rssdp.UdpSocket.#ctor
  isExternal: false
  name: UdpSocket
  nameWithType: UdpSocket.UdpSocket
  fullName: Rssdp.UdpSocket.UdpSocket
- uid: System.Net.Sockets.Socket
  commentId: '!:System.Net.Sockets.Socket'
  isExternal: true
  name: Net.Sockets.Socket
  nameWithType: Net.Sockets.Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Socket
  commentId: '!:Socket'
  isExternal: true
  name: Socket
  nameWithType: Socket
  fullName: Socket
